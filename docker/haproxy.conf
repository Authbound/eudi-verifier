global
    maxconn 50000
    #log /dev/log local0
    log stdout format raw local0
    user haproxy
    group haproxy
    #stats socket /run/haproxy/admin.sock user haproxy group haproxy mode 660 level admin
    nbthread 4
    cpu-map auto:1/1-4 0-3
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    timeout connect 10s
    timeout client 30s
    timeout server 30s
    log global
    mode http
    option httplog
    option forwardfor
    option http-server-close
    maxconn 3000

frontend https_frontend
    bind *:443 ssl crt /etc/ssl/certs/mysite.pem
    
    # Security headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    http-response set-header X-Frame-Options "SAMEORIGIN"
    http-response set-header X-Content-Type-Options "nosniff"
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # API endpoints go to backend
    use_backend verifier-backend if { path_beg /api/ }
    use_backend verifier-backend if { path_beg /wallet/ }
    use_backend verifier-backend if { path_beg /verifier/ }
    
    # Everything else goes to UI
    default_backend verifier-ui

backend verifier-backend
    balance roundrobin
    option httpchk GET /actuator/health
    http-check expect status 200
    server server1 verifier-backend:8080 check cookie server1

backend verifier-ui
    balance roundrobin
    option httpchk GET /
    http-check expect status 200
    server server1 verifier-ui:4300 check cookie server1
